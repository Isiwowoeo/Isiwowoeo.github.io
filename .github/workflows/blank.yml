# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
import random

# create a list of words
word_list = ["apple", "banana", "cherry", "durian", "elderberry", "fig", "grape", "honeydew", "kiwi", "lemon", "mango", "nectarine", "orange", "peach", "quince", "raspberry", "strawberry", "tangerine", "ugli fruit", "watermelon"]

# select a random word from the list
word = random.choice(word_list)

# initialize variables
guesses = ''
turns = 10

# loop until the user has used up all their turns
while turns > 0:
    # keep track of failed attempts
    failed = 0
    
    # loop through each character in the word
    for char in word:
        # if the character is in the list of guessed characters, display it
        if char in guesses:
            print(char, end=' ')
        # otherwise, display an underscore
        else:
            print('_', end=' ')
            failed += 1
    
    # if there are no underscores left, the user has won
    if failed == 0:
        print("\nCongratulations! You won!")
        break
    
    # ask the user to guess a letter
    guess = input("\nGuess a letter: ")
    
    # add the guess to the list of guessed characters
    guesses += guess
    
    # if the guess is not in the word, subtract a turn
    if guess not in word:
        turns -= 1
        print("Sorry, that letter is not in the word.")
        print("You have", turns, "more turns.")
    
    # if the user has used up all their turns, they have lost
    if turns == 0:
        print("Sorry, you have run out of turns. The word was", word)
